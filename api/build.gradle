plugins {
    id 'idea'
    id 'java-library'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

springBoot {
    buildInfo()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.telegram:telegrambots-spring-boot-starter:4.7'
    implementation 'com.github.faystmax:binance-java-api:master-SNAPSHOT'

    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-collections4:4.4'

    runtimeOnly 'com.h2database:h2'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.server) {
                put from: jar.archiveFile.get().asFile.absolutePath , into: "./"
                executeSudo "service trading-bot stop", pty: true
                executeSudo "cp ./${jar.archiveFileName.get()} /srv/trading-bot/", pty: true
                executeSudo "rm -f /srv/trading-bot/application.jar", pty: true
                executeSudo "ln -s /srv/trading-bot/${jar.archiveFileName.get()} /srv/trading-bot/application.jar", pty: true
                executeSudo "service trading-bot start", pty: true
            }
        }
    }
}
deploy.dependsOn build