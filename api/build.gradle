plugins {
    id 'idea'
    id 'java-library'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

springBoot {
    buildInfo()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.integration:spring-integration-mail'
    implementation 'org.telegram:telegrambots-spring-boot-starter:5.0.1.1'
    implementation 'com.github.faystmax:exchange-rates-api-client:1.1.0'
    implementation 'com.github.faystmax:binance-api-client:1.0.4'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.mail:mail:1.4.7'
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-email:1.5'

    implementation 'org.postgresql:postgresql:42.2.10'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: "com.vaadin.external.google", module:"android-json"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.server) {
                put from: jar.archiveFile.get().asFile.absolutePath , into: "./"
                executeSudo "service trading-bot stop", pty: true
                executeSudo "cp ./${jar.archiveFileName.get()} /srv/trading-bot/", pty: true
                executeSudo "rm -f /srv/trading-bot/application.jar", pty: true
                executeSudo "ln -s /srv/trading-bot/${jar.archiveFileName.get()} /srv/trading-bot/application.jar", pty: true
                executeSudo "service trading-bot start", pty: true
            }
        }
    }
}
deploy.dependsOn build